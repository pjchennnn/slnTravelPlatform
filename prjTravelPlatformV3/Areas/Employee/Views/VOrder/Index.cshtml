
@{
    ViewData["Title"] = "Index";
}

@section Styles {
    <link href="~/lib/datatables/css/jquery.datatables.css" rel="stylesheet" />
    
    <style>
        thead {
            background-color: lightslategrey;
            color: black;
        }
    </style>
}

<h3>訂單管理</h3>

<button id="t1" type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#VOrderPartial" onclick="getEditPartial(0)"><i class="fa-solid fa-circle-plus" style="font-size:0.8rem"></i> 新增</button>

<table class="table" id="tbVOrder">
    <thead>
        <tr>
            <th style="display: none">fId</th>
            <th style="display: none">優惠券</th>
            <th style="display: none">自取或配送</th>
            <th style="display: none">是否需面試</th>
            <th style="display: none">實體或電子簽</th>
            <th style="display: none">預計出國日期</th>
            <th style="display: none">備註</th>
            <th>客戶名稱</th>
            <th>商品名稱</th>
            <th>總價</th>
            <th>面試提醒</th>
            <th>訂單狀態</th>
            <th>評價</th>
            <th style="width:50px">功能</th>
        </tr>
    </thead>
</table>

<!--Modal-->
<div class="modal fade" id="VOrderPartial" tabindex=" -1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="edit-modal">
                @*引入partial*@
            </div>

        </div>
    </div>
</div>


@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!--jQuery-->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!--jQuery UI-->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>






    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>
    
    <script src="//cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>
    <script>
        let fid = -1;
        const editModal = document.getElementById("edit-modal");
        const createModal = document.getElementById("create-modal");

        const btnSave = document.getElementById("btnSave");


        const loadVOrderData = () => {
            $("#tbVOrder").dataTable({
                autoWidth: false,
                ajax: {
                    type: 'GET',
                    url: "/Employee/VOrder/allVOrders",
                    dataSrc: function (json) { return json; }
                },
                columns: [
                    { "data": "fId", "visible": false },
                    { "data": "優惠券", searchable: true, "visible": false },
                    { "data": "自取或配送", searchable: true, "visible": false },
                    { "data": "是否需面試", searchable: true, "visible": false },
                    { "data": "實體或電子簽", searchable: true, "visible": false },
                    { "data": "預計出國日期", searchable: true, "visible": false },
                    { "data": "備註", searchable: true, "visible": false },
                    { "data": "客戶名稱" },
                    { "data": "商品名稱" },
                    { "data": "總價" },
                    { "data": "面試提醒" },
                    { "data": "訂單狀態" },
                    { "data": "評價" },
                    {
                        data: null,
                        title: "功能",
                        sortable: false,
                        render: function (data, type, row) {
                            return `<button id="t1" type = "button" class="btn btn-primary btn-sm me-1" data-bs-toggle="modal" data-bs-target="#VOrderPartial" onclick="getEditPartial(${row.fId})"><i class="fa-solid fa-pen-to-square" style="font-size:0.8rem"></i> 編輯</button> ` +
                                '<button type="button" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash" style="font-size:0.8rem"></i> 取消訂單</button>'
                        }
                    },
                ],
                fixedHeader: { header: true },
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/zh-HANT.json'
                },


            })
        }


        //取得partial view，新增跟編輯都呼叫這個function，新增id參數帶0，編輯是選到的那列資料的id
        const getEditPartial = async (fId) => {
            const response = await fetch(`@Url.Content("~/Employee/VOrder/GetPartial")?id=${fId}`);
            const data = await response.text();
            editModal.innerHTML = data;

            const productName = document.getElementById('FProductId').options[document.getElementById('FProductId').selectedIndex].text;
            getPrInEnByName(productName);

            fid = fId;
        }


        const getTravelerInfoPartial = async (e,fId) => {
            event.preventDefault();
            const response = await fetch(`@Url.Content("~/Employee/VOrder/GetTravelerInfoPartial")?id=${fId}`);
            const data = await response.text();
            e.target.parentNode.nextElementSibling.innerHTML = data;
        }
        // const getTravelerInfoPartial = (e) => {
        //     event.preventDefault();
        //     console.log(e.target.parentNode.nextElementSibling)
        // }





        //根據傳入的action name呼叫對應的api
        const sendFetchRequest = async (actionName) => {
            //抓取目前的form id
            const formId = document.querySelector("form").getAttribute('id');
            //目前的form id的DOM元素
            const formIdDOM = document.getElementById(`${formId}`)
            //新增form data物件
            const formData = new FormData(formIdDOM);
            //取得防偽標籤
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            try {
                const res = await fetch(`@Url.Content("~/Employee/VOrder/")` + actionName, {
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: formData,
                    method: 'POST'
                });
                if (!res.ok) {
                    throw new Error(`${res.status}`)
                }
                const data = await res.json();

                if (data.success) {
                    console.log(data);
                    //關閉modal
                    var myModal = bootstrap.Modal.getInstance(VOrderPartial);
                    myModal.hide();
                    //顯示訊息
                    Swal.fire({
                        title: "Success",
                        text: data.message,
                        icon: "success"
                    });
                    //刷新datatable
                    $('#tbVOrder').DataTable().ajax.reload();
                } else {
                    //依自己的form增加需要驗證的欄位(驗證規則在partial view中)
                    const errorProductName = document.querySelector(`[data-valmsg-for="FProductId"]`);
                    const errorCustmoerName = document.querySelector(`[data-valmsg-for="FCustomerId"]`);
                    const errorQuantity = document.querySelector(`[data-valmsg-for="FQuantity"]`);
                    const errorDepartureDate = document.querySelector(`[data-valmsg-for="FDepartureDate"]`);
                    const errorFCoupon = document.querySelector(`[data-valmsg-for="FCouponId"]`);
                    if (errorProductName) {
                        errorProductName.textContent = data.errors.FProductId[0];
                    }
                    if (errorCustmoerName) {
                        errorCustmoerName.textContent = data.errors.FCustomerId[0];
                    }
                    if (errorQuantity) {
                        errorQuantity.textContent = data.errors.FQuantity[0];
                    }
                    if (errorDepartureDate) {
                        errorDepartureDate.textContent = data.errors.FDepartureDate[0];
                    }
                    if (errorFCoupon) {
                        errorFCoupon.textContent = data.errors.FCouponId[0];
                    }
                }
            } catch (error) {
                Swal.fire({
                    title: "error",
                    text: error.message,
                    icon: "error"
                });
            }


        }

        //查詢商品的價格、面試需求、實體or電子簽
        const getPrInEnByName = async (e) => {
            const interview = document.getElementById('interview')
            const SorD = document.getElementById('SorD')

            const response = await fetch(`@Url.Content("~/Employee/VProduct/getPrInEnByProductName")?p=${e}`);
            const data = await response.json();

            if (data !== null) {
                //換價格
                document.getElementById('FPrice').value = data.price;
                //判斷有沒有Interview
                if (data.interview && interview.classList.contains('d-none')) { interview.classList.remove('d-none') }
                if (!data.interview && !(interview.classList.contains('d-none'))) { interview.classList.add('d-none') }
                //判斷是否為實體簽
                if (data.entity && SorD.classList.contains('d-none')) { SorD.classList.remove('d-none') }
                if (!data.entity && !(SorD.classList.contains('d-none'))) { SorD.classList.add('d-none') }
                //算總價
                getTotal();
            }
        }

        //計算總價
        async function getTotal() {
            const Total = document.getElementById('Total');
            const price = document.getElementById('FPrice').value;
            const quantity = document.getElementById('FQuantity').value;
            const coupon = document.getElementById('FCouponId')
            const couponSelected = coupon.options[coupon.selectedIndex].text;
            if (couponSelected !== null) {
                const response = await fetch(`@Url.Content("~/Employee/VProduct/getDiscount")?coupon=${couponSelected}`);
                const discount = await response.json();
                if (price && quantity) {
                    Total.innerText = price * quantity - discount
                    if (Total.innerText < 0) {
                        Total.innerText = 0
                    }
                }
            }
        }

        //自取或配送地址radio button
        function SorDToggle(e) {
            const pd = document.getElementById('FForPickupOrDeliveryAddress')
            if (e === 'S' && !(pd.classList.contains('d-none'))) {
                pd.classList.add('d-none');
                pd.value = 'S';
            }
            if (e === 'D' && pd.classList.contains('d-none')) {
                pd.classList.remove('d-none');
                pd.value = null;
            }
        }

        //jquery ui datepicker(用在預計出國日與旅客生日)
        function showDatePicker(e) {
            $(e).datepicker({ // 使用目标元素
                dateFormat: 'yy/m/d', // 设置日期格式
                showButtonPanel: true, // 显示按钮面板
                changeMonth: true, // 允许选择月份
                changeYear: true // 允许选择年份
            }).datepicker('show');
        }

        //訂單旅客表格新增
        function newTr() {
            event.preventDefault();
            const tbody = document.getElementById('tbody');
            let count = tbody.rows.length;

            // 創建新的<tr>元素
            const newRow = document.createElement('tr');

            // 添加<td>元素及其內容
            newRow.innerHTML = `
                <td><input class="form-control" type="text" id="travelerInfo_FName_${count}" name="travelerInfo_FName_${count}"></td>
                <td>
                    <input type="radio" id="male_${count}" name="gender_${count}" value="True" onchange="changeGender(event)" />
                    <label for="male_${count}">男</label>
                    <input type="radio" id="female_${count}" name="gender_${count}" value="False" onchange="changeGender(event)" />
                    <label for="female_${count}">女</label>
                </td>
                <td class="d-none"><input class="form-control" type="text" id="travelerInfo_FGender_${count}" name="travelerInfo_FGender_${count}"></td>
                <td><input class="form-control" onfocus="showDatePicker(this)" type="text" id="travelerInfo_FBirthDate_${count}" name="travelerInfo_FBirthDate_${count}"></td>
            `;

            // 將新的<tr>元素添加到<tbody>中
            tbody.appendChild(newRow);

            resetQuantity(tbody.rows.length);
            getTotal();
        }

        //訂單旅客表格縮減
        function minusTr() {
            event.preventDefault();
            const tbody = document.getElementById('tbody');
            if (tbody.rows.length > 0) {
                const lastRow = tbody.rows[tbody.rows.length - 1];
                lastRow.parentNode.removeChild(lastRow);
            }
            resetQuantity(tbody.rows.length)
            getTotal()
        }

        //購買數量與旅客人數連動
        function resetQuantity(count) {
            const FQuantity = document.getElementById('FQuantity');
            FQuantity.value = count;
        }

        //取消按Enter的預設功能
        function pre(e) {
            if (e.key === 'Enter') {
                event.preventDefault();
            }
        }

        //旅客性別radio button連動
        function changeGender(e) {
            e.target.parentNode.nextElementSibling.firstChild.setAttribute('value', e.target.value)
        }


        $(document).ready(() => {
            loadVOrderData();
        })

    </script>
}